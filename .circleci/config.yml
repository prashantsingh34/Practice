version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@3.2.1
#   node: circleci/node@5

jobs:
  use-gcp:
    executor: gcp-cli/default
    steps:
      - run:
          name: Saving the OIDC token to the oidc token file  path
          command: |
            mkdir -p /home/circleci/creds
      # - gcp-cli/setup:
      #     version: latest
      #     use_oidc: true
  # test-node:
  #   executor: node/default
  #   steps:
  #     - checkout
  #     - node/install-packages:
  #         pkg-manager: npm
  #     - run:
  #         name: Run tests
  #         command: npm test --passWithNoTests
  build:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - gcp-cli/setup:
          version: latest
          use_oidc: true
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Updating the git tag version
          command: |
            last_tag=$(git describe --tags --abbrev=0)
            major_version=$(echo "$last_tag" | cut -d '.' -f 1)
            minor_version=$(echo "$last_tag" | cut -d '.' -f 2)
            patch_version=$(echo "$last_tag" | cut -d '.' -f 3)
            new_patch_version=$((patch_version + 1))
            # Construct the new tag with incremented patch version
            new_tag="${major_version}.${minor_version}.${new_patch_version}"
            # Create the tag (ensure you're on the correct commit before pushing)
            git tag -a "$new_tag" -m "Auto-generated tag: $new_tag"

            # Push the tag to the remote repository (adjust URL if needed)
            git push origin --tags          
      - run:
          name: Set up Docker for gcloud
          command: |
            gcloud auth configure-docker us-central1-docker.pkg.dev
      - run:
          name: Docker build
          command: |
            docker build -t react-app .
      - run:
          name: Tag Docker image
          command: |
            latest_tag=$(git describe --tags --abbrev=0)
            docker tag react-app us-central1-docker.pkg.dev/elite-totality-418717/react-portfolio/portfolio-image:${latest_tag}
      - run:
          name: Push docker image
          command: |
            latest_tag=$(git describe --tags --abbrev=0)
            docker push us-central1-docker.pkg.dev/elite-totality-418717/react-portfolio/portfolio-image:${latest_tag}
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      # - gcp-cli/setup:
      #     version: latest
      #     use_oidc: true
      - run:
          name: Updating image tag nad version of Helm Chart
          command: |
            latest_tag=$(git describe --tags --abbrev=0)
    
            git clone "https://prashant:$TOKEN@github.com/$HELM_REPO_URL.git"

            # git clone https://<username>:<token>@github.com/username/repository.git

            cd $(basename "$HELM_REPO_URL")

            # Update the version in Chart.yaml
            sed -i.bak "s/^version: .*/version: $latest_tag/" "cart-service/Chart.yaml"
            rm "cart-service/Chart.yaml.bak"

            #Update the version in values.yaml
            # Update the tag in values.yaml
            sed -i "s/^ *tag: .*/  tag: \"$latest_tag\"/" "cart-service/values.yaml"
            # sed -i.bak 's/tag: ".*"/tag: "'$NEW_VERSION'"/' "$IMAGE_YAML_PATH"
            # rm "$IMAGE_YAML_PATH.bak"

            # Commit and push the changes
            git config --global user.email "prashantsingh830@gmail.com"
            git config --global user.name "Prashant"
            git add .
            git commit -m "Update Helm chart version to $NEW_TAG"
            git push origin main


            echo "Helm chart version updated and changes pushed successfully."

      # - run:
      #     name: Update Helm Chart Version
      #     command: |
      #       # git clone https://github.com/$HELM_REPO_URL.git 
      #       # bash .circleci/update_chart_version.sh $HELM_REPO_URL $EMAIL $TOKEN $NEW_VERSION
      #       echo "the new tag is , $NEW_TAG"            
      #       git clone "https://prashant:$TOKEN@github.com/$HELM_REPO_URL.git"

      #       # git clone https://<username>:<token>@github.com/username/repository.git

      #       cd $(basename "$HELM_REPO_URL")

      #       # Update the version in Chart.yaml
      #       sed -i.bak "s/^version: .*/version: $NEW_TAG/" "cart-service/Chart.yaml"
      #       rm "cart-service/Chart.yaml.bak"

      #       #Update the version in values.yaml
      #       # Update the tag in values.yaml
      #       sed -i "s/^ *tag: .*/  tag: \"$NEW_TAG\"/" "cart-service/values.yaml"
      #       # sed -i.bak 's/tag: ".*"/tag: "'$NEW_VERSION'"/' "$IMAGE_YAML_PATH"
      #       # rm "$IMAGE_YAML_PATH.bak"

      #       # Commit and push the changes
      #       git config --global user.email "prashantsingh830@gmail.com"
      #       git config --global user.name "Prashant"
      #       git add .
      #       git commit -m "Update Helm chart version to $NEW_TAG"
      #       git push origin main


      #       echo "Helm chart version updated and changes pushed successfully."

  

workflows:
  main:
    jobs: 
      - use-gcp
      # - test-node
      - build:
          requires:
            - use-gcp
          filters:
             branches:
               only:
                 - main
      # - release-approval:
      #     type: approval
      #     requires:
      #       - test-node
      #       - build
      #       - use-gcp
      #     filters:
      #        branches:
      #          only:
      #            - main
      - deploy:
          requires:
            # - test-node
            - build
            # - release-approval
            - use-gcp
          filters:
             branches:
               only:
                 - main 