version: 2.1
orbs:
  gcp-cli: circleci/gcp-cli@3.2.1
#   node: circleci/node@5

jobs:
  use-gcp:
    executor: gcp-cli/default
    steps:
      - run:
          name: Saving the OIDC token to the oidc token file  path
          command: |
            mkdir -p /home/circleci/creds
      # - gcp-cli/setup:
      #     version: latest
      #     use_oidc: true
  # test-node:
  #   executor: node/default
  #   steps:
  #     - checkout
  #     - node/install-packages:
  #         pkg-manager: npm
  #     - run:
  #         name: Run tests
  #         command: npm test --passWithNoTests
  # build:
    # docker:
    #   - image: google/cloud-sdk
    # steps:
    #   - checkout
    #   - gcp-cli/setup:
    #       version: latest
    #       use_oidc: true
    #   - setup_remote_docker:
    #       docker_layer_caching: true
    #   - run:
    #       name: Set up Docker for gcloud
    #       command: |
    #         gcloud auth configure-docker us-central1-docker.pkg.dev
    #   - run:
    #       name: Docker build
    #       command: |
    #         docker build -t react-app .
    #   - run:
    #       name: Tag Docker image
    #       command: |
    #         docker tag react-app us-central1-docker.pkg.dev/elite-totality-418717/react-portfolio/portfolio-image
    #   - run:
    #       name: Push docker image
    #       command: | 
    #         docker push us-central1-docker.pkg.dev/elite-totality-418717/react-portfolio/portfolio-image
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      # - gcp-cli/setup:
      #     version: latest
      #     use_oidc: true
      - run:
          name: Checking last used tag
          command: |
            latest_tag=$(git describe --tags --abbrev=0)
            # Extract major, minor, and patch versions using echo and read
            echo "$latest_tag" | { read major minor patch && ((patch++)); NEW_VERSION="$major.$minor.$patch"; }

            # Display the new version
            echo "New version: $NEW_VERSION"



      - run:
          name: Update Helm Chart Version
          command: |
            # git clone https://github.com/$HELM_REPO_URL.git 
            bash .circleci/update_chart_version.sh $HELM_REPO_URL $EMAIL $TOKEN $NEW_VERSION
  

workflows:
  main:
    jobs: 
      - use-gcp
      # - test-node
      # - build:
      #     requires:
      #       - use-gcp
      #     filters:
      #        branches:
      #          only:
      #            - main
      # - release-approval:
      #     type: approval
      #     requires:
      #       - test-node
      #       - build
      #       - use-gcp
      #     filters:
      #        branches:
      #          only:
      #            - main
      - deploy:
          # requires:
            # - test-node
            # - build
            # - release-approval
            # - use-gcp
          filters:
             branches:
               only:
                 - main 